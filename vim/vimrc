set nocompatible " must be the first line
syntax on

" UTF-8
set encoding=utf-8
if has("multi_byte")
	if &termencoding == ""
		let &termencoding = &encoding
	endif
   set encoding=utf-8                     " better default than latin1
   setglobal fileencoding=utf-8           " change default file encoding when writing new files
endif

" Move around
set backspace=2 " make backspace work like most other apps
set linebreak
set laststatus=2
set statusline=%{fugitive#statusline()}

" Enable 256 colors mode
set t_Co=256 " if working via putty use set &t_Co=256

" Indentation
set tabstop=3 " number of spaces when TAB pressed
set shiftwidth=3
set smartindent
set autoindent

" Enable filetype detection and file-type specific plugins
filetype on
filetype indent on
filetype plugin on

" Autocompletion
set wildmode=list:longest

set foldenable

" Keep current screen unmoved when creating new split screen
set splitbelow
set splitright

" UI stuff
set background=dark
colorscheme solarized " Set colorscheme from ~/.vim/colors/
set guifont=*
set number " Show line numbers

" Filetypes
au BufNewFile,BufRead *.less set filetype=css " Recognize .less files as .css

" Override <leader> defaults
let mapleader = ","

" Abbreviations
" Open current file in Firefox - syntax may differ from one OS to another
abbrev ff :!firefox % &<cr>
" Shortcut for ESC
abbrev <leader>e <esc>

" Abbreviations for INSERT mode
" Shortcut for ESC
imap <leader>e <esc>

" Nmaps
" space is a shortcut for colon, I know it's funny but I like it:)
nmap <space> :
" fast .VIMRC edit
nmap <leader>ev :tabedit $MYVIMRC<cr>
" Markdown to HTML - make sure to download Markdown.pl to /usr/local/bin
nmap <leader>md :%!/usr/local/bin/Markdown.pl --html4tags<cr>

" Auto-refresh VIMRC after save
if has("autocmd")
	autocmd! bufwritepost .vimrc source %
endif

" Load Pathogen to manage plugins
call pathogen#infect()

" NERDTree config
let NERDTreeChDirMode=2
let NERDTreeIgnore=['\env','\.vim$', '\~$', '\.pyc$', '\.swp$', '\.egg-info$', '^dist$', '^build$']
let NERDTreeSortOrder=['^__\.py$', '\/$', '*', '\.swp$', '\~$']
let NERDTreeShowBookmarks=1
let NERDTreeHightlightCursorline=1
let NERDTreeShowHidden=1 " Show hidden files
" Map NERDTreeToggle to convenient key
nmap <leader>n :NERDTreeToggle<cr>

" ZENCODING
let g:sparkup = 'sparkup'
let g:sparkupArgs = '--no-last-newline'
let g:sparkupExecuteMapping = '<C-e>'
let g:sparkupNextMapping = '<C-n>'

filetype off
filetype indent plugin on
